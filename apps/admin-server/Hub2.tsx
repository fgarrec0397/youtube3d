/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 C:\Users\fgarr\Documents\lab\youtube3d\apps\admin\public\assets\hub2.glb --types 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube016: THREE.Mesh
    Mesh: THREE.Mesh
    Mesh_1: THREE.Mesh
    Cylinder: THREE.Mesh
    Cube017: THREE.Mesh
    Cube059: THREE.Mesh
    Cube059_1: THREE.Mesh
  }
  materials: {
    ['Marble.010']: THREE.MeshStandardMaterial
    ['Marble.011']: THREE.MeshStandardMaterial
    ['Marble.012']: THREE.MeshStandardMaterial
    ['01 - Default']: THREE.MeshStandardMaterial
    Marble: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Glowing red']: THREE.MeshStandardMaterial
  }
}

type ActionName = 'DoorAction'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/hub2.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <spotLight name="Spot" intensity={60917.06} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[-24.539, 20.966, 45.169]} rotation={[-1.575, -0.036, 0]} scale={2.299}>
          <group position={[0, 0, -1]} />
        </spotLight>
        <pointLight name="Point" intensity={21544.898} decay={2} position={[-2.67, 8.708, 48.289]} rotation={[-Math.PI / 2, 0, 0]} />
        <mesh name="Cube014" geometry={nodes.Cube014.geometry} material={materials['Marble.010']} position={[0.179, -10.514, 38.299]} rotation={[Math.PI / 2, 0, 0]} scale={[1.562, 1.289, 349.822]} />
        <mesh name="Cube015" geometry={nodes.Cube015.geometry} material={materials['Marble.011']} position={[0.413, 9.328, 59.773]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[9.368, 37.699, 0.03]} />
        <mesh name="Cube016" geometry={nodes.Cube016.geometry} material={materials['Marble.012']} position={[0.413, 9.328, 16.967]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[9.368, 37.699, 0.348]} />
        <group name="Door" position={[0.407, 4.033, 17.965]} rotation={[Math.PI / 2, 0, 0]} scale={[0.006, 0.003, 0.009]}>
          <mesh name="Mesh" geometry={nodes.Mesh.geometry} material={materials['01 - Default']} />
          <mesh name="Mesh_1" geometry={nodes.Mesh_1.geometry} material={materials.Marble} />
        </group>
        <mesh name="Cylinder" geometry={nodes.Cylinder.geometry} material={materials['Material.002']} position={[-0.142, -11.196, 52.246]} />
        <mesh name="Cube017" geometry={nodes.Cube017.geometry} material={materials.Marble} position={[-26.302, 0.854, 18.398]} />
        <group name="Cube018" position={[-24.41, 0.854, 26.231]}>
          <mesh name="Cube059" geometry={nodes.Cube059.geometry} material={materials['Glowing red']} />
          <mesh name="Cube059_1" geometry={nodes.Cube059_1.geometry} material={materials.Marble} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/hub2.glb')
