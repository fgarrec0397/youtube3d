/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 C:\Users\fgarr\Documents\lab\youtube3d\apps\admin\public\assets\hubTest.glb --types 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube016: THREE.Mesh
    Mesh: THREE.Mesh
    Mesh_1: THREE.Mesh
    Cylinder: THREE.Mesh
    Cube017: THREE.Mesh
    Cube059: THREE.Mesh
    Cube059_1: THREE.Mesh
    Cube019: THREE.Mesh
    Cube020: THREE.Mesh
    Cube007: THREE.Mesh
    Cube007_1: THREE.Mesh
    Cube022: THREE.Mesh
    Cube023: THREE.Mesh
  }
  materials: {
    ['Marble.010']: THREE.MeshStandardMaterial
    ['Marble.011']: THREE.MeshStandardMaterial
    ['Marble.012']: THREE.MeshStandardMaterial
    ['01 - Default']: THREE.MeshStandardMaterial
    Marble: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Glowing red']: THREE.MeshStandardMaterial
    ['Marble.003']: THREE.MeshStandardMaterial
    ['Marble.013']: THREE.MeshStandardMaterial
    ['Glowing red.001']: THREE.MeshStandardMaterial
    ['Marble.014']: THREE.MeshStandardMaterial
    ['Marble.015']: THREE.MeshStandardMaterial
  }
}

type ActionName = 'DoorAction'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/hubTest.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <spotLight name="Point" intensity={62775.882} angle={0.888} penumbra={1} decay={2} position={[33.937, 15.617, 55.805]} rotation={[-0.568, 0.839, -0.486]}>
          <group position={[0, 0, -1]} />
        </spotLight>
        <spotLight name="Point001_1" intensity={54351.413} angle={0.888} penumbra={1} decay={2} position={[-33.792, 15.617, 58.636]} rotation={[-0.38, -0.457, -0.698]}>
          <group position={[0, 0, -1]} />
        </spotLight>
        <spotLight name="Point002_1" intensity={54351.413} angle={0.888} penumbra={1} decay={2} position={[-11.791, 15.617, 22.175]} rotation={[-2.7, 0.055, -2.568]}>
          <group position={[0, 0, -1]} />
        </spotLight>
        <spotLight name="Point003_1" intensity={54351.413} angle={0.888} penumbra={1} decay={2} position={[18.935, 15.617, 17.633]} rotation={[-2.672, 0.096, 1.282]}>
          <group position={[0, 0, -1]} />
        </spotLight>
        <mesh name="Cube014" geometry={nodes.Cube014.geometry} material={materials['Marble.010']} position={[0.179, -10.514, 38.299]} rotation={[Math.PI / 2, 0, 0]} scale={[1.562, 1.289, 349.822]} />
        <mesh name="Cube015" geometry={nodes.Cube015.geometry} material={materials['Marble.011']} position={[0.413, 9.328, 59.773]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[9.368, 37.699, 0.03]} />
        <mesh name="Cube016" geometry={nodes.Cube016.geometry} material={materials['Marble.012']} position={[0.413, 9.328, 16.967]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[9.368, 37.699, 0.348]} />
        <group name="Door" position={[0.407, 4.033, 17.965]} rotation={[Math.PI / 2, 0, 0]} scale={[0.006, 0.003, 0.009]}>
          <mesh name="Mesh" geometry={nodes.Mesh.geometry} material={materials['01 - Default']} />
          <mesh name="Mesh_1" geometry={nodes.Mesh_1.geometry} material={materials.Marble} />
        </group>
        <mesh name="Cylinder" geometry={nodes.Cylinder.geometry} material={materials['Material.002']} position={[-0.142, -11.196, 52.246]} />
        <mesh name="Cube017" geometry={nodes.Cube017.geometry} material={materials.Marble} position={[-24.625, 0.439, 18.398]} />
        <group name="Cube018" position={[-22.733, 0.439, 26.231]}>
          <mesh name="Cube059" geometry={nodes.Cube059.geometry} material={materials['Glowing red']} />
          <mesh name="Cube059_1" geometry={nodes.Cube059_1.geometry} material={materials.Marble} />
        </group>
        <mesh name="Cube019" geometry={nodes.Cube019.geometry} material={materials['Marble.003']} position={[0.413, 19.004, 38.517]} rotation={[-Math.PI / 2, 0, -Math.PI / 2]} scale={[-21.804, -37.699, -0.339]} />
        <mesh name="Cube020" geometry={nodes.Cube020.geometry} material={materials['Marble.013']} position={[-36.938, 9.328, 38.412]} rotation={[-Math.PI / 2, -Math.PI / 2, 0]} scale={[-9.368, -22.057, -0.379]} />
        <group name="Cube021" position={[22.869, 0.439, 26.231]} rotation={[-Math.PI, 0, 0]} scale={-1}>
          <mesh name="Cube007" geometry={nodes.Cube007.geometry} material={materials['Glowing red.001']} />
          <mesh name="Cube007_1" geometry={nodes.Cube007_1.geometry} material={materials['Marble.014']} />
        </group>
        <mesh name="Cube022" geometry={nodes.Cube022.geometry} material={materials['Marble.014']} position={[24.761, 0.439, 18.398]} rotation={[-Math.PI, 0, 0]} scale={-1} />
        <mesh name="Cube023" geometry={nodes.Cube023.geometry} material={materials['Marble.015']} position={[37.153, 9.328, 38.412]} rotation={[-Math.PI / 2, -Math.PI / 2, 0]} scale={[-9.368, -22.057, -0.379]} />
      </group>
    </group>
  )
}

useGLTF.preload('/hubTest.glb')
