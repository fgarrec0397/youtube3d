/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 C:\Users\fgarr\Documents\lab\youtube3d\apps\admin\public\assets\hub.glb --types 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube016: THREE.Mesh
    Cube017: THREE.Mesh
  }
  materials: {
    ['Marble.010']: THREE.MeshStandardMaterial
    ['Marble.011']: THREE.MeshStandardMaterial
    ['Marble.012']: THREE.MeshStandardMaterial
  }
}

type ActionName = 'Cube.017Action'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/hub.glb') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Cube014" geometry={nodes.Cube014.geometry} material={materials['Marble.010']} position={[0.179, 0.009, 38.299]} rotation={[Math.PI / 2, 0, 0]} scale={[1.562, 1.289, 1]} />
        <mesh name="Cube015" geometry={nodes.Cube015.geometry} material={materials['Marble.011']} position={[0.413, 9.328, 59.773]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[9.368, 37.699, 0.03]} />
        <mesh name="Cube016" geometry={nodes.Cube016.geometry} material={materials['Marble.012']} position={[0.413, 9.328, 16.967]} rotation={[Math.PI, 0, Math.PI / 2]} scale={[9.368, 37.699, 0.348]} />
        <mesh name="Cube017" geometry={nodes.Cube017.geometry} material={nodes.Cube017.material} position={[-0.199, 3.91, 16.544]} scale={[4.046, 3.957, 1]} />
      </group>
    </group>
  )
}

useGLTF.preload('/hub.glb')
