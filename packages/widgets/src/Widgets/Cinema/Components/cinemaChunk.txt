<rectAreaLight
                        ref={lightRef}
                        width={5}
                        height={15}
                        intensity={5}
                        position={[0, 7.3, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                        castShadow
                        receiveShadow
                    />
                    <MeshCollider type="cuboid">
                        <mesh
                            geometry={nodes.Cube002.geometry}
                            material={materials.Plain}
                            position={[-0.304, 0, 0]}
                            rotation={[Math.PI / 2, 0, 0]}
                            castShadow
                            receiveShadow
                        />
                    </MeshCollider>
                    <MeshCollider type="cuboid">
                        <mesh
                            ref={ref}
                            geometry={nodes.Cube001.geometry}
                            material={materials.Marble}
                            position={[-3.704, 3.708, 0]}
                            rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                            castShadow
                            receiveShadow
                        />
                    </MeshCollider>
                    <MeshCollider type="cuboid">
                        <mesh
                            geometry={nodes.Cube004.geometry}
                            material={materials["Plain black"]}
                            position={[0, 7.377, 0]}
                            rotation={[Math.PI / 2, 0, 0]}
                            castShadow
                            receiveShadow
                        />
                    </MeshCollider>
                    <MeshCollider type="trimesh">
                        <mesh
                            geometry={nodes.Cube005.geometry}
                            material={materials.Marble}
                            position={[4.617, 9.36, 0]}
                            rotation={[-Math.PI / 2, -Math.PI / 2, 0]}
                            scale={[-1, -1, -40.426]}
                            castShadow
                            receiveShadow
                        />
                    </MeshCollider>
                    <MeshCollider type="cuboid">
                        <mesh
                            geometry={nodes.Cube006.geometry}
                            material={materials["Black concrete"]}
                            position={[51.298, 9.36, 0]}
                            rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                            castShadow
                            receiveShadow
                        >
                            <YoutubeVideoPlayer
                                videoId={videoId}
                                position={[0, 0, 1.5]}
                                canVideoPlay={showYoutubeVideo}
                            />
                        </mesh>
                    </MeshCollider>
                    <CuboidCollider
                        args={[24.003, 16.641, 0.03]}
                        position={[27.722, -0.0001, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                        name="room-floor"
                        onCollisionEnter={({ other }) => {
                            if (other.rigidBodyObject?.name === "player") {
                                setShowYoutubeVideo(true);
                            }
                        }}
                        onCollisionExit={({ other }) => {
                            if (other.rigidBodyObject?.name === "player") {
                                setShowYoutubeVideo(false);
                            }
                        }}
                    >
                        <mesh
                            geometry={nodes.Cube007.geometry}
                            material={materials.Marble}
                            // position={[27.615, 0.009, 0]}
                            // rotation={[Math.PI / 2, 0, 0]}
                            scale={[1.009, 1, 1]}
                            castShadow
                            receiveShadow
                        />
                    </CuboidCollider>
                    <mesh
                        geometry={nodes.Cube008.geometry}
                        material={materials.Marble}
                        position={[27.69, 9.187, -16.527]}
                        rotation={[Math.PI, 0, Math.PI / 2]}
                        scale={[9.368, 23.816, 0.03]}
                        castShadow
                        receiveShadow
                    />
                    <mesh
                        geometry={nodes.Cube009.geometry}
                        material={materials.Marble}
                        position={[27.557, 9.328, 16.619]}
                        rotation={[Math.PI, 0, Math.PI / 2]}
                        scale={[9.368, 23.816, 0.03]}
                        castShadow
                        receiveShadow
                    />
                    <mesh
                        geometry={nodes.Cube010.geometry}
                        material={materials["Plain black"]}
                        position={[27.722, 18.701, -0.016]}
                        rotation={[Math.PI / 2, 0, -Math.PI]}
                        scale={[-1, -1, -10.203]}
                        castShadow
                        receiveShadow
                    />
                    <mesh
                        geometry={nodes.stairs.geometry}
                        material={materials.Marble}
                        position={[21.291, 1.721, 3.731]}
                        castShadow
                        receiveShadow
                    />
                    <mesh
                        geometry={nodes.Cube003.geometry}
                        material={materials["black concrete"]}
                        position={[51.162, 10.214, 0]}
                        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                        scale={0.568}
                        castShadow
                        receiveShadow
                    />
                    <mesh
                        geometry={nodes.Neon.geometry}
                        material={materials.Neon}
                        position={[-3.619, 7.289, -0.006]}
                        rotation={[-Math.PI / 2, 0, -Math.PI]}
                        scale={[-0.066, -16.558, -0.065]}
                        castShadow
                        receiveShadow
                    />
                    <mesh
                        geometry={nodes.Neon001.geometry}
                        material={materials["Neon.001"]}
                        position={[3.346, 7.289, -0.006]}
                        rotation={[-Math.PI / 2, 0, -Math.PI]}
                        scale={[-0.066, -16.558, -0.065]}
                        castShadow
                        receiveShadow
                    />

                    <mesh
                        geometry={nodes.Cube012.geometry}
                        material={materials["Marble.004"]}
                        position={[-4.896, 3.708, 0]}
                        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                        scale={[1, 1, 40.262]}
                    />
                    <mesh
                        geometry={nodes.Cube011.geometry}
                        material={materials["black concrete"]}
                        position={[-3.717, 3.673, -16.906]}
                        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                    />
                    <mesh
                        geometry={nodes.Cube013.geometry}
                        material={materials["black concrete.002"]}
                        position={[3.514, 3.673, -16.906]}
                        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                    />
                    <mesh
                        geometry={nodes.collision_enter.geometry}
                        material={nodes.collision_enter.material}
                        position={[33.1, 4.273, -12.792]}
                        rotation={[-Math.PI, 0, -Math.PI]}
                        scale={[-1, -4.581, -3.845]}
                    /> */}
-----------------------------------------------
<GameRigidBody
    type="fixed"
    colliders={false}
    position={[0, 0, index * size.z]}
    rotation={[0, isOdd ? 0 : Math.PI, 0]}
>
    <group dispose={null}>
        <MeshCollider type="cuboid">
            <mesh
                ref={floorRef}
                geometry={nodes.Cube002.geometry}
                // material={materials["Material.004"]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[3.721, 16.641, 0.03]}
                receiveShadow
                castShadow
            >
                <MeshesMaterial />
            </mesh>
        </MeshCollider>
        <MeshCollider type="cuboid">
            <mesh
                ref={ref}
                geometry={nodes.Cube001.geometry}
                material={materials["Material.004"]}
                position={[-3.704, 3.708, 0]}
                rotation={[-Math.PI / 2, Math.PI / 2, 0]}
                scale={[3.721, 16.641, 0.03]}
                receiveShadow
                castShadow
            >
                {/* <MeshesMaterial /> */}
            </mesh>
        </MeshCollider>
        <mesh
            geometry={nodes.Cube004.geometry}
            material={materials["Material.004"]}
            position={[0, 7.377, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[3.721, 16.641, 0.03]}
            // receiveShadow
            // castShadow
        >
            <MeshReflectorMaterial
                blur={[300, 50]}
                resolution={1024}
                mixBlur={1}
                mixStrength={100}
                mirror={0}
                roughness={1}
                depthScale={1.2}
                minDepthThreshold={0.4}
                maxDepthThreshold={1.4}
                color="#ffffff"
                metalness={0.8}
            />
        </mesh>
        {/* <rectAreaLight
                        ref={lightRef}
                        width={5}
                        height={15}
                        intensity={10}
                        position={[0, 7.3, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                        castShadow
                    /> */}
        <directionalLight
            ref={lightRef2}
            intensity={0.1}
            position={[0, 7.3, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            target-position={[index, -10, 0]}
            // target={floorRef.current}
            shadow-mapSize-width={1024}
            shadow-mapSize-height={1024}
            castShadow
        />
        <MeshCollider type="trimesh">
            <mesh
                geometry={nodes.Cube005.geometry}
                material={materials["Material.004"]}
                position={[3.709, 9.36, 0]}
                rotation={[-Math.PI / 2, Math.PI / 2, 0]}
                scale={[9.368, 16.641, 0.03]}
                // receiveShadow
                // castShadow
            >
                {/* <MeshesMaterial /> */}
            </mesh>
        </MeshCollider>

        <MeshCollider type="cuboid">
            <mesh
                // geometry={nodes.Cube006.geometry}
                material={materials["Material.004"]}
                position={[51.298, 9.36, 0]}
                rotation={[0, -Math.PI / 2, 0]}
                scale={[22, 20, 0.03]}
                receiveShadow
                castShadow
            >
                <YoutubeVideoPlayer
                    videoId={videoId}
                    position={[0, 0, 1.5]}
                    canVideoPlay={showYoutubeVideo}
                />

                {/* <MeshesMaterial /> */}
            </mesh>
        </MeshCollider>
        <CuboidCollider
            args={[24.003, 16.641, 0.03]}
            position={[27.722, -0.0001, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            name="room-floor"
            onCollisionEnter={({ other }) => {
                if (other.rigidBodyObject?.name === "player") {
                    setShowYoutubeVideo(true);
                }
            }}
            onCollisionExit={({ other }) => {
                if (other.rigidBodyObject?.name === "player") {
                    setShowYoutubeVideo(false);
                }
            }}
        >
            <mesh
                geometry={nodes.Cube007.geometry}
                // material={materials["Material.004"]}
                // position={[27.722, -0.0001, 0]}
                // rotation={[-Math.PI / 2, 0, 0]}
                scale={[24.003, 16.641, 0.03]}
                receiveShadow
                castShadow
            >
                {/* <MeshesMaterial /> */}
            </mesh>
        </CuboidCollider>
        {/* <mesh
                    geometry={nodes.Plane.geometry}
                    material={nodes.Plane.material}
                    position={[23.315, 6.912, 16.7]}
                    rotation={[Math.PI / 2, 0, -Math.PI]}
                    scale={[-19.646, -1, -6.876]}
                /> */}
        {/* <MeshCollider type="cuboid"> */}
        <mesh
            geometry={nodes.Cube008.geometry}
            // material={materials["Material.004"]}
            position={[27.69, 9.187, -16.527]}
            rotation={[Math.PI, 0, Math.PI / 2]}
            scale={[9.368, 23.816, 0.03]}
            // receiveShadow
            // castShadow
        >
            <MeshReflectorMaterial
                blur={[300, 50]}
                resolution={1024}
                mixBlur={1}
                mixStrength={100}
                mirror={0}
                roughness={1}
                depthScale={1.2}
                minDepthThreshold={0.4}
                maxDepthThreshold={1.4}
                color="#ffffff"
                metalness={0.8}
            />
        </mesh>
        {/* </MeshCollider> */}
        {/* <MeshCollider type="cuboid"> */}
        <mesh
            geometry={nodes.Cube009.geometry}
            // material={materials["Material.004"]}
            position={[27.557, 9.403, 16.619]}
            rotation={[Math.PI, 0, Math.PI / 2]}
            scale={[9.368, 23.816, 0.03]}
            // receiveShadow
            // castShadow
        >
            <MeshReflectorMaterial
                blur={[300, 50]}
                resolution={1024}
                mixBlur={1}
                mixStrength={100}
                mirror={0}
                roughness={1}
                depthScale={1.2}
                minDepthThreshold={0.4}
                maxDepthThreshold={1.4}
                color="#ffffff"
                metalness={0.8}
            />
        </mesh>
        {/* </MeshCollider> */}
        {/* <MeshCollider type="cuboid"> */}
        <mesh
            geometry={nodes.Cube010.geometry}
            // material={materials["Material.004"]}
            position={[27.722, 18.701, -0.116]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[24.003, 16.641, 0.03]}
            // receiveShadow
            // castShadow
        >
            <MeshReflectorMaterial
                blur={[300, 50]}
                resolution={1024}
                mixBlur={1}
                mixStrength={100}
                mirror={0}
                roughness={1}
                depthScale={1.2}
                minDepthThreshold={0.4}
                maxDepthThreshold={1.4}
                color="#ffffff"
                metalness={0.8}
            />
        </mesh>
        {/* </MeshCollider> */}
    </group>
</GameRigidBody>;


------------------------ PART 2

<group dispose={null}>
                    {/* <directionalLight
                        ref={lightRef2}
                        intensity={1}
                        position={[0, 7.3, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                        target-position={[index, -100, 0]}
                        // target={floorRef.current}
                        shadow-mapSize-width={1024}
                        shadow-mapSize-height={1024}
                        castShadow
                    /> */}
                    <rectAreaLight
                        ref={lightRef}
                        width={5}
                        height={15}
                        intensity={5}
                        position={[0, 7.3, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                    />
                    <MeshCollider type="cuboid">
                        <mesh
                            ref={ref}
                            geometry={nodes.Cube002.geometry}
                            material={materials.Marble}
                            rotation={[Math.PI / 2, 0, 0]}
                        />
                    </MeshCollider>
                    <mesh
                        geometry={nodes.Cube001.geometry}
                        material={materials.Marble}
                        position={[-3.704, 3.708, 0]}
                        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                    />
                    <mesh
                        geometry={nodes.Cube004.geometry}
                        material={materials.Plain}
                        position={[0, 7.377, 0]}
                        rotation={[Math.PI / 2, 0, 0]}
                    />
                    <mesh
                        geometry={nodes.Cube005.geometry}
                        material={materials.Marble}
                        position={[3.709, 9.36, 0]}
                        rotation={[Math.PI / 2, -Math.PI / 2, 0]}
                    />
                    <mesh
                        // geometry={nodes.Cube006.geometry}
                        material={materials["Material.004"]}
                        position={[51.298, 9.36, 0]}
                        rotation={[0, -Math.PI / 2, 0]}
                        scale={[22, 20, 0.03]}
                        receiveShadow
                        castShadow
                    >
                        <YoutubeVideoPlayer
                            videoId={videoId}
                            position={[0, 0, 1.5]}
                            canVideoPlay={showYoutubeVideo}
                        />

                        {/* <MeshesMaterial /> */}
                    </mesh>
                    {/* <mesh
                        geometry={nodes.Cube006.geometry}
                        material={materials["Material.009"]}
                        position={[51.298, 9.36, 0]}
                        rotation={[-Math.PI / 2, Math.PI / 2, 0]}
                        scale={[9.368, 16.641, 0.03]}
                    /> */}
                    <CuboidCollider
                        args={[24.003, 16.641, 0.03]}
                        position={[27.722, -0.0001, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                        name="room-floor"
                        onCollisionEnter={({ other }) => {
                            if (other.rigidBodyObject?.name === "player") {
                                setShowYoutubeVideo(true);
                            }
                        }}
                        onCollisionExit={({ other }) => {
                            if (other.rigidBodyObject?.name === "player") {
                                setShowYoutubeVideo(false);
                            }
                        }}
                    >
                        <mesh
                            geometry={nodes.Cube007.geometry}
                            // material={materials["Material.004"]}
                            // position={[27.722, -0.0001, 0]}
                            // rotation={[-Math.PI / 2, 0, 0]}
                            scale={[24.003, 16.641, 0.03]}
                            receiveShadow
                            castShadow
                        >
                            <mesh
                                geometry={nodes.Cube007.geometry}
                                material={materials["Material.010"]}
                                // position={[27.722, 0.009, 0]}
                                // rotation={[-Math.PI / 2, 0, 0]}
                                scale={[24.003, 16.641, 0.03]}
                            />
                            {/* <MeshesMaterial /> */}
                        </mesh>
                    </CuboidCollider>
                    {/* <mesh
                        geometry={nodes.Plane.geometry}
                        material={nodes.Plane.material}
                        position={[23.543, 6.912, 16.7]}
                        rotation={[Math.PI / 2, 0, -Math.PI]}
                        scale={[-19.646, -1, -6.876]}
                    /> */}
                    <mesh
                        geometry={nodes.Cube008.geometry}
                        material={materials["Material.011"]}
                        position={[27.69, 9.187, -16.527]}
                        rotation={[Math.PI, 0, Math.PI / 2]}
                        scale={[9.368, 23.816, 0.03]}
                    />
                    <mesh
                        geometry={nodes.Cube009.geometry}
                        material={materials["Material.012"]}
                        position={[27.557, 9.403, 16.619]}
                        rotation={[Math.PI, 0, Math.PI / 2]}
                        scale={[9.368, 23.816, 0.03]}
                    />
                    <mesh
                        geometry={nodes.Cube010.geometry}
                        material={materials["Material.013"]}
                        position={[27.722, 18.701, -0.116]}
                        rotation={[-Math.PI / 2, 0, 0]}
                        scale={[24.003, 16.641, 0.03]}
                    />
                </group>